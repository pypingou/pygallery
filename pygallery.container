# /etc/containers/systemd/photo-gallery.container
#
# This Quadlet file defines a systemd service for your Photo Gallery container.
# It automatically manages the container using Podman.

[Container]
# Name of the container
ContainerName=pygallery-app

# Name of the image to run (must be built locally or pulled from a registry)
Image=localhost/pygallery:latest

# Define the volume mounts for your photos and thumbnails.
# IMPORTANT: Replace /home/user/my_gallery_photos and /home/user/my_gallery_thumbnails
# with the actual paths on your Fedora server where your photos and thumbnails reside.
# Ensure these directories exist on the host.
Volume=/home/user/my_gallery_photos:/app/photos:Z
Volume=/home/user/my_gallery_thumbnails:/app/thumbnails:Z

# Expose the container's port 5000 to the host's port 8000.
# This port mapping is primarily for direct access/testing.
# Apache will use the container's internal IP/name.
PublishPort=8000:5000

# Connect the container to a user-defined network
# Replace 'my_gallery_network' with the name you chose when creating it.
#Network=my_gallery_network

# OPTIONAL: Assign a static IP address within the network's subnet.
# Choose an IP address that is within the subnet range of 'my_gallery_network'.
# StaticIP=10.89.0.10 # Uncomment and set a specific IP if desired

# Set environment variables for the container.
# BASE_URL_PREFIX: This value must match what you have in your config.ini
# SCRIPT_NAME: This tells Gunicorn (and thus Flask via ProxyFix) its application mount point.
# IMPORTANT: Replace <YOUR_BASE_URL_PREFIX_VALUE> (e.g., /gallery, /myphotos)
Environment=BASE_URL_PREFIX=<YOUR_BASE_URL_PREFIX_VALUE>
Environment=SCRIPT_NAME=<YOUR_BASE_URL_PREFIX_VALUE>

[Unit]
# Description for the systemd service
Description=pygallery: My Lightweight Photo Gallery Container
# Ensure network is up before starting the service
Wants=network-online.target
After=network-online.target

[Service]
# Automatically restart the container if it exits with a non-zero status
Restart=on-failure

